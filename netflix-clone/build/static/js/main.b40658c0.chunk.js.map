{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Navbar.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","islargerow","useState","movies","setmovies","useEffect","a","get","request","data","results","fetchData","trailerUrl","setTrailerUrl","className","map","movie","onClick","movieTrailer","original_name","name","original_title","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","picture","setpicture","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","NavBar","show","setshow","window","addEventListener","scrollY","removeEventListener","Clone","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b40658c0.chunk.js","sourcesContent":["const API_KEY = \"3aa2f957e3c34d47862183447112e357\";\r\n\r\n\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&width_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\n\r\nexport default requests","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_Url = \"https://images.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, islargerow }) {\r\n  const [movies, setmovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setmovies(request.data.results);\r\n      // console.log(request.data.results);\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(\r\n        movie?.original_name || movie?.name || movie?.original_title || \"\"\r\n      )\r\n        .then((url) => {\r\n          // console.log(url);\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    setTrailerUrl(\"\");\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              onClick={() => handleClick(movie)}\r\n              className={`row_poster ${islargerow && \"row_posterLarge\"}`}\r\n              src={`${base_Url}${\r\n                islargerow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [picture, setpicture] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchTrending);\r\n      setpicture(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n  // console.log(picture);\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        // objectFit: \"contain\",\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${picture?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        {/* background image */}\r\n        {/* title */}\r\n        <h1 className=\"banner__title\">\r\n          {picture?.title || picture?.name || picture?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        {/* div 2buttons */}\r\n        <h1 className=\"banner__description\">\r\n          {truncate(picture?.overview, 150)}\r\n        </h1>\r\n        {/* description */}\r\n      </div>\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction NavBar() {\r\n  const [show, setshow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        setshow(true);\r\n      } else setshow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"netflix.png\"\r\n        // src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n        alt=\"Netflix logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avator\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"netflix avator logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\n// import instance from \"./axios\"\nimport requests from \"./requests\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport NavBar from \"./Navbar\";\nimport \"./App.css\";\n// const base_url = \"https://image.tmdb.org/t/p/original/\";\n\n// https://logo.tmdb.org/t/p/original/8uO0gUM8aNqYLs1OsTBQiXu0fEv.jpg\n\n// https://logo.tmdb.org/t/p/w500/8uO0gUM8aNqYLs1OsTBQiXu0fEv.jpg\nfunction Clone() {\n  // const [source, setsource] = useState([])\n\n  // const [name, setname] = useState([])\n  // // Api key=3aa2f957e3c34d47862183447112e357\n\n  // useEffect(() => {\n\n  //   axios.get(\" https://api.themoviedb.org/3/movie/550?api_key=3aa2f957e3c34d47862183447112e357\").then((response) => {\n  //     setname(response.data.production_companies);\n  //     // setsource(response.data)\n  //     console.log(response.data)\n  //     // console.log(`${base_url}${response.data.poster_path}`)\n\n  //   })\n  // }, [])\n\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        islargerow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default Clone;\n\n// https://api.themoviedb.org/3/movie/550?api_key=3aa2f957e3c34d47862183447112e357\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Clone from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <>\n    <Clone />\n    {/* <h1>Hello world</h1> */}\n  </>,\n  rootElement\n);\n"],"sourceRoot":""}